---
- name: Setup initial variables{% raw %}
  ansible.builtin.set_fact:
    credentials: "{{ credentials | default({}) }}"
    dnf_vars: "{{ dnf_vars | default([]) }}"

- name: Extract JFrog Artifactory credentials
  ansible.builtin.set_fact:
    credentials: "{{ credentials | combine([{'key': server.url | urlsplit('hostname'), 'value': {'username': server.user, 'password': server.password}}] | items2dict) }}"
    dnf_vars: "{{ dnf_vars | combine([{'key': ['DNF_VAR_', server.url | urlsplit('hostname') | regex_replace('[-\\.]', '_') | upper, '_USER'] | join, 'value': server.user}, {'key': ['DNF_VAR_', server.url | urlsplit('hostname') | regex_replace('[-\\.]', '_') | upper, '_PASS'] | join, 'value': server.password}] | items2dict) }}"
  loop: "{{ servers }}"
  vars:
    servers: "{{ ['servers'] | map('extract', lookup('ansible.builtin.file', lookup('ansible.builtin.fileglob', '{{ ansible_env.HOME }}/.jfrog/jfrog-cli.conf.v*', wantlist=true) | sort | last | default('/dev/null')) | default('{\"servers\": []}', true) | from_json) | flatten }}"
  loop_control:
    label: "server.url"
    loop_var: "server"

- name: Fail
  ansible.builtin.fail:
    msg: "Failed to get Artifactory credentials. Please login using the JFrog CLI and try again."
  when:
    - required is defined
    - required | bool
    - dnf_vars | length == 0{% endraw %}
